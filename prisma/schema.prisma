// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @default(cuid()) @map("id")
    discordId String    @unique @map("discord_id")
    xp        Int       @default(0) @map("xp")
    level     Int       @default(1) @map("level")
    birthday  DateTime? @map("birthday")
    events    Events[]  @relation("user_events")
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime  @updatedAt @map("updated_at")
    Jumble    Jumble?
}

model Jumble {
    id             String   @id @default(cuid()) @map("id")
    lastfmUser     String?  @map("lastfm_user")
    points         Int      @default(0) @map("points")
    fightingPoints Int      @default(0) @map("fighting_points")
    bestTime       Int      @default(0) @map("best_time")
    plays          Int      @default(0) @map("plays")
    userId         String   @unique @map("user_id")
    user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt      DateTime @default(now()) @map("created_at")
    updatedAt      DateTime @updatedAt @map("updated_at")
}

model Events {
    id          String   @id @default(cuid()) @map("id")
    description String   @map("description")
    month       Int      @map("month")
    day         Int      @map("day")
    type        String   @map("type")
    repeat      Boolean  @default(false) @map("repeat")
    guildId     String?  @map("guild_id")
    guild       Guild?   @relation("guild_events", fields: [guildId], references: [id])
    createdBy   String?  @map("created_by")
    user        User?    @relation("user_events", fields: [createdBy], references: [discordId], onDelete: Cascade)
    createdAt   DateTime @default(now()) @map("created_at")
    updatedAt   DateTime @updatedAt @map("updated_at")
}

model Daily {
    id        String  @id @default(cuid()) @map("id")
    day       Int     @default(0) @map("day")
    afternoon Int     @default(0) @map("afternoon")
    night     Int     @default(0) @map("night")
    guild     Guild[]
}

model Guild {
    id           String   @id @default(cuid()) @map("id")
    discordId    String   @unique @map("discord_id")
    mainChannel  String?  @map("main_channel")
    events       Events[] @relation("guild_events")
    daily        Daily    @relation(fields: [dailyId], references: [id])
    dailyId      String   @map("daily_id")
    dailyEnabled Boolean  @default(true) @map("daily_enabled")
    createdAt    DateTime @default(now()) @map("created_at")
    updatedAt    DateTime @updatedAt @map("updated_at")
}
